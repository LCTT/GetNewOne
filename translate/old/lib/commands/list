#!/bin/bash

set -e
##异常即退出

STATUS_ALL=
SHOW_SOURCES=1
SHOW_TRANSLATED=
SHOW_PUBLISHED=

## USAGE START
## 用法开始
# Usage: [OPTION...]
# Description: List LCTT articles
# Arguments:
# 争论：
#   Options:
#     --[no-]sources: List source directory or not (default: yes)
#     --[no-]translated: List translated directory or not (default: no)
#     --[no-]published: List published directory or not (default: no)
#     --all: For source directory listing, show all articles
#            (includes translating and translated articles)
#     --help: Print usage for this command
## USAGE END
## 用法结束

usage() {
## 用法() {
  echo "List LCTT articles"
  echo "Usage: $0 [OPTION...]"
# echo "Usage: test.sh [OPTION...]"
  echo "Options:"
  echo "  --[no-]sources     List source directory or not (default: yes)"
  echo "  --[no-]translated  List translated directory or not (default: no)"
  echo "  --[no-]published   List published directory or not (default: no)"
  echo "  --all              For source directory listing, show all articles"
  echo "                     (includes translating and translated articles)"
  echo "  --help             Print usage for this command"
}

list() {
  TYPE="$1"
##TYPE="第一个参数"
  ALL="$2"
##ALL="第二个参数"

  {
    [ "$TYPE" = 'sources' -a -z "$ALL" ] && {
##    "$TYPE" = 'soures' -a 为真 -z 为零 "$ALL" && { 
     KEYWORDS='Translated|translating|fanyi|翻译中|申请翻译'
      grep -RLE "${KEYWORDS}" "${LCTT_DIR}/${TYPE}/"
##    grep -R 递归查询 -L 列出不符名称 -E 正则扩展
    } || {
      find "${LCTT_DIR}/${TYPE}/" -type f -iname '*.md'
    }
  } | grep -vE '(README\.md|translated\.md)$' \
##    grep -v 反转查询 -E 正则扩展
    | grep -o "${TYPE}/.*$" | sed 's#^[^/]*/##'
##    grep -o 高亮匹配 | sed 取消“/”和“/前”
}

for ARG in $@; do
## for $自变量 in $@ ;  do
  case $ARG in
## case 语句
    --sources)
      SHOW_SOURCES=1
      ;;
    --no-sources)
      SHOW_SOURCES=
      ;;
    --translated)
      SHOW_TRANSLATED=1
      ;;
    --no-translated)
      SHOW_TRANSLATED=
      ;;
    --published)
      SHOW_PUBLISHED=1
      ;;
    --no-published)
      SHOW_PUBLISHED=
      ;;
    --all)
      STATUS_ALL=1
      ;;
    --help)
      usage
      exit 0
      ;;
    *)
      ./lib/error "Unknown argument $ARG"
  esac
done

[ -n "$SHOW_SOURCES" ] && {
## -n 为零
  echo "Sources:"
  list sources "$STATUS_ALL"
} || true

[ -n "$SHOW_TRANSLATED" ] && {
  echo "Translated:"
  list translated
} || true

[ -n "$SHOW_PUBLISHED" ] && {
  echo "Published:"
  list published
} || true
